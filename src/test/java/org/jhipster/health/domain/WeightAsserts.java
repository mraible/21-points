package org.jhipster.health.domain;

import static org.assertj.core.api.Assertions.assertThat;
import static org.jhipster.health.domain.AssertUtils.zonedDataTimeSameInstant;

public class WeightAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWeightAllPropertiesEquals(Weight expected, Weight actual) {
        assertWeightAutoGeneratedPropertiesEquals(expected, actual);
        assertWeightAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWeightAllUpdatablePropertiesEquals(Weight expected, Weight actual) {
        assertWeightUpdatableFieldsEquals(expected, actual);
        assertWeightUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWeightAutoGeneratedPropertiesEquals(Weight expected, Weight actual) {
        assertThat(expected)
            .as("Verify Weight auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWeightUpdatableFieldsEquals(Weight expected, Weight actual) {
        assertThat(expected)
            .as("Verify Weight relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getTimestamp())
                        .as("check timestamp")
                        .usingComparator(zonedDataTimeSameInstant)
                        .isEqualTo(actual.getTimestamp())
            )
            .satisfies(e -> assertThat(e.getWeight()).as("check weight").isEqualTo(actual.getWeight()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWeightUpdatableRelationshipsEquals(Weight expected, Weight actual) {}
}
