package org.jhipster.health.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PreferencesAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPreferencesAllPropertiesEquals(Preferences expected, Preferences actual) {
        assertPreferencesAutoGeneratedPropertiesEquals(expected, actual);
        assertPreferencesAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPreferencesAllUpdatablePropertiesEquals(Preferences expected, Preferences actual) {
        assertPreferencesUpdatableFieldsEquals(expected, actual);
        assertPreferencesUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPreferencesAutoGeneratedPropertiesEquals(Preferences expected, Preferences actual) {
        assertThat(expected)
            .as("Verify Preferences auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPreferencesUpdatableFieldsEquals(Preferences expected, Preferences actual) {
        assertThat(expected)
            .as("Verify Preferences relevant properties")
            .satisfies(e -> assertThat(e.getWeeklyGoal()).as("check weeklyGoal").isEqualTo(actual.getWeeklyGoal()))
            .satisfies(e -> assertThat(e.getWeightUnits()).as("check weightUnits").isEqualTo(actual.getWeightUnits()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPreferencesUpdatableRelationshipsEquals(Preferences expected, Preferences actual) {}
}
